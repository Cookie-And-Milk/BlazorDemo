@page "/form"
@using Microsoft.Extensions.Logging
@inject ILogger<Form> Logger
@inject NavigationManager nm
@inject StateContianer sc

<h1>Form</h1>

<EditForm Model = "@people" OnSubmit="@HandleSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <p>
        <label>
            Name: <InputText id="name" @bind-Value="people.Name" />
        </label>
        <label>
            Age: <InputNumber id="age" @bind-Value = "people.Age" />
        </label>
        <label>
            Title: <InputSelect id="title" @bind-Value = "people.Title">
                <option value="">Select a title</option>
                <option value="Mr.">Mr.</option>
                <option value="Mrs.">Mrs.</option>
                <option value="Ms.">Ms.</option>
            </InputSelect>
        </label>
    </p>

    <p>
        <label>
            Email Address: <InputText id="emailAddress" @bind-Value = "people.Email" />
        </label>
    </p>

    <p>
        <label>
            Contact Number: <InputText id="phoneNum" @bind-Value = "people.PhoneNum" />
        </label>
    </p>

    <button type = "submit">Submit</button>
</EditForm>

<!--
<p>
    <input @bind:event="oninput" @bind:get="inputValue" @bind:set="OnInput" />
</p>

<p>
    <code>inputValue</code>: @inputValue
</p>
-->

<!-- <button type="button" @onclick = "GoToResult">Result</button> -->

@code {
    private People people = new();

    private void HandleSubmit()
    {
        Logger.LogInformation("HandleSubmit called");
        people.CreationDateTime = DateTime.Now; 
        sc.SetValue(people); 
        nm.NavigateTo("result"); 
    }

    /*private void GoToResult()
        {
        Navigation.NavigateTo("result"); 
        } 
    private string? inputValue;

    private void OnInput(string value)
    {
        var newValue = value ?? string.Empty; 

        inputValue = newValue.Length > 4 ? "Long!" : newValue; 
    } */
}
